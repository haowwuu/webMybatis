/*
 * File Name: SoapMessageFilter.java
 * Copyright: Copyright 2014-2014 CETC52 CETITI All Rights Reserved.
 * Description: 
 * Author: Wuwuhao
 * Create Date: 2016-10-20

 * Modifier: Wuwuhao
 * Modify Date: 2016-10-20
 * Bugzilla Id: 
 * Modify Content: 
 */
package com.cetiti.dsp.filter;

import java.util.Iterator;
import java.util.Set;

import javax.xml.namespace.QName;
import javax.xml.soap.SOAPBody;
import javax.xml.soap.SOAPElement;
import javax.xml.soap.SOAPHeader;
import javax.xml.soap.SOAPHeaderElement;
import javax.xml.ws.handler.MessageContext;
import javax.xml.ws.handler.soap.SOAPHandler;
import javax.xml.ws.handler.soap.SOAPMessageContext;

/**
 * 〈一句话功能简述〉
 * 
 * @author    Wuwuhao
 * @version   DSPlite V0.2.0, 2016-10-20
 * @see       
 * @since     DSPlite V0.2.0
 */

public class SoapMessageFilter implements SOAPHandler<SOAPMessageContext> {
    
	@Override
    public Set<QName> getHeaders() {
    	System.out.println("getHeaders");
        return null;
    }
    
	@Override
    public boolean handleMessage(SOAPMessageContext smc){
    
    	Boolean outboundProperty = (Boolean)smc.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY);
    	if(!outboundProperty){  //handle input message
    		try {
        		SOAPHeader header = smc.getMessage().getSOAPHeader();
        		if(null!=header){
        			Iterator<?> it = header.examineAllHeaderElements();
            		while(it.hasNext()){
            			SOAPHeaderElement element = (SOAPHeaderElement)it.next();
            			System.out.println(element.getTagName());
            			System.out.println(element.getTextContent());
            		}
            		
            		SOAPBody body = smc.getMessage().getSOAPBody();
            		
            		Iterator<?> itb = body.getChildElements();
            		String localName=null, prefix=null, uri=null;
            		
            		while(itb.hasNext()){
            			SOAPElement se = (SOAPElement)itb.next();
            			localName = se.getElementName().getLocalName();
            			prefix = se.getElementName().getPrefix();
            			uri = se.getElementName().getURI();
            			
            			System.out.println(localName);
            			System.out.println(uri);
            		}
            		
            		body.removeContents();
            		SOAPElement se = body.addChildElement(localName+"Response", prefix, uri);
            		se = se.addChildElement(new QName("return"));
            		se.addTextNode("text");
            		return false;
        		}else{
        			System.out.println("header null"+outboundProperty);
        		}
        		
    		} catch (Exception e) {
    			e.printStackTrace();
    		}
    	}
    	
    	
    	System.out.println("handleMessage");
       
        return true;
    }
    
    @Override
    public boolean handleFault(SOAPMessageContext smc) {
    	System.out.println("handleFault");
        return true;
    }
    
   
    @Override
    public void close(MessageContext messageContext) {
    	 // nothing to clean up
    	System.out.println("close");
    }
    
   
}
